global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3


defaults
	mode tcp               #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK  
	retries 3              #两次连接失败就认为是服务器不可用，也可以通过后面设置  
	option redispatch      #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器  
	option abortonclose    #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接  
	maxconn 32000          #默认的最大连接数  
	timeout connect 5000ms #连接超时  
	timeout client 30000ms #客户端超时  
	timeout server 30000ms #服务器超时  
	#timeout check 2000    #心跳检测超时  
	log 127.0.0.1 local0 err #[err warning info debug]  

frontend admin_stats
        stats   enable
        bind    *:8080    #监听的ip端口号
        mode    http    #开关
        option  httplog
        log     global
        maxconn 10
        stats   refresh 30s   #统计页面自动刷新时间
        stats   uri /admin    #访问的uri   ip:8080/admin
        stats   realm haproxy
        stats   auth admin:admin  #认证用户名和密码
        stats   hide-version   #隐藏HAProxy的版本号
        stats   admin if TRUE   #管理界面，如果认证成功了，可通过webui管理节点

listen kubernetes_apiserver
	bind 0.0.0.0:7443
	mode tcp  
	balance source
	server GPU-K8S-Node01 172.0.7.10:6443 weight 1 maxconn 10000 check inter 10s  
	server GPU-K8S-Node02 172.0.7.17:6443 weight 1 maxconn 10000 check inter 10s  
	server GPU-K8S-Node03 172.0.7.18:6443 weight 1 maxconn 10000 check inter 10s
